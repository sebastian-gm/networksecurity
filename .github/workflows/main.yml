name: workflow

on:
  push:
    branches:
        - main
    paths-ignore:
        - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
        - name: Checkout Code
          uses: actions/checkout@v3

        - name: Lint code
          run: echo "Linting repository"

        - name: Run unit test
          run: echo "Running unit tests"

  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
        - name: Checkout Code
          uses: actions/checkout@v3

        - name: Install Utilities
          run: |
            sudo apt-get update
            sudo apt-get install -y jq unzip
        
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: Build, tag, and push image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ secrets.ECR_REGISTRY}}
            ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
            IMAGE_TAG: latest
          run: |
            # Build
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

            # Tag
            docker tag \
              $ECR_REPOSITORY:$IMAGE_TAG \
              $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            # Push
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            # be deployed to ECS.            
            # echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
            # new output syntax (replaces deprecated set-output)
            echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT